apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-config
  namespace: microservices
data:
  AUTH_SERVER_PORT: "8081"
  AUTH_SERVER_MODE: "release"
  AUTH_DATABASE_HOST: "postgres-service"
  AUTH_DATABASE_PORT: "5432"
  AUTH_DATABASE_USER: "postgres"
  AUTH_DATABASE_PASSWORD: "password"
  AUTH_DATABASE_NAME: "auth_db"
  AUTH_DATABASE_SSL_MODE: "disable"
  AUTH_JWT_SECRET_KEY: "your-super-secret-jwt-key-change-in-production"
  AUTH_JWT_ACCESS_TOKEN_DURATION: "15"
  AUTH_JWT_REFRESH_TOKEN_DURATION: "168"
  AUTH_LOGGER_LEVEL: "info"
  AUTH_LOGGER_FORMAT: "json"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Never
        envFrom:
        - configMapRef:
            name: auth-config
        ports:
        - containerPort: 8081
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---

apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: microservices
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: ClusterIP