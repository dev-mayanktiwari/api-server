.PHONY: build-all build-auth build-user build-gateway run-local stop-local clean-local deploy-k8s undeploy-k8s logs-local help

# Variables
COMPOSE_FILE := docker-compose.microservices.yml
K8S_NAMESPACE := microservices

# Default target
help:
	@echo "Available targets:"
	@echo "  build-all       - Build all microservices"
	@echo "  build-auth      - Build auth service"
	@echo "  build-user      - Build user service" 
	@echo "  build-gateway   - Build API gateway"
	@echo "  run-local       - Start all services locally with Docker Compose"
	@echo "  stop-local      - Stop all local services"
	@echo "  clean-local     - Clean up local Docker resources"
	@echo "  deploy-k8s      - Deploy to Kubernetes"
	@echo "  undeploy-k8s    - Remove from Kubernetes"
	@echo "  logs-local      - Show logs for all services"
	@echo "  help            - Show this help message"

# Build targets
build-all: build-auth build-user build-gateway

build-auth:
	@echo "Building auth service..."
	cd services/auth-service && docker build -t auth-service:latest .

build-user:
	@echo "Building user service..."
	cd services/user-service && docker build -t user-service:latest .

build-gateway:
	@echo "Building API gateway..."
	cd services/api-gateway && docker build -t api-gateway:latest .

# Local development with Docker Compose
run-local:
	@echo "Starting microservices locally..."
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "Services starting... Use 'make logs-local' to see logs"
	@echo "API Gateway will be available at http://localhost:8080"

stop-local:
	@echo "Stopping local services..."
	docker-compose -f $(COMPOSE_FILE) down

clean-local:
	@echo "Cleaning up local Docker resources..."
	docker-compose -f $(COMPOSE_FILE) down -v --remove-orphans
	docker system prune -f

logs-local:
	docker-compose -f $(COMPOSE_FILE) logs -f

# Kubernetes deployment
deploy-k8s:
	@echo "Deploying to Kubernetes..."
	kubectl apply -f k8s/shared/
	kubectl apply -f k8s/postgres/
	kubectl apply -f k8s/auth-service/
	kubectl apply -f k8s/user-service/
	kubectl apply -f k8s/api-gateway/
	@echo "Deployment complete. Check status with: kubectl get all -n $(K8S_NAMESPACE)"

undeploy-k8s:
	@echo "Removing from Kubernetes..."
	kubectl delete -f k8s/api-gateway/ --ignore-not-found=true
	kubectl delete -f k8s/user-service/ --ignore-not-found=true
	kubectl delete -f k8s/auth-service/ --ignore-not-found=true
	kubectl delete -f k8s/postgres/ --ignore-not-found=true
	kubectl delete -f k8s/shared/ --ignore-not-found=true
	@echo "Cleanup complete"

# Development helpers
test-auth:
	@echo "Testing auth service..."
	curl -X POST http://localhost:8081/api/v1/auth/generate \
		-H "Content-Type: application/json" \
		-d '{"user_id":"test-user","email":"test@example.com","role":"user"}'

test-user:
	@echo "Testing user service registration..."
	curl -X POST http://localhost:8082/api/v1/auth/register \
		-H "Content-Type: application/json" \
		-d '{"email":"test@example.com","password":"password123","first_name":"Test","last_name":"User"}'

test-gateway:
	@echo "Testing API gateway health..."
	curl http://localhost:8080/health