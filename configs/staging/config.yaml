# Staging environment configuration
environment: staging
service_name: api-server
version: v1.0.0

# Server configuration
server:
  host: 0.0.0.0
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  shutdown_timeout: 15s
  tls_cert_file: ""
  tls_key_file: ""

# Database configuration
database:
  host: ${DB_HOST:localhost}
  port: ${DB_PORT:5432}
  username: ${DB_USERNAME:postgres}
  password: ${DB_PASSWORD:postgres}
  database: ${DB_NAME:api_server_staging}
  ssl_mode: prefer
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 45m
  conn_max_idle_time: 20m

# JWT configuration
jwt:
  secret: ${JWT_SECRET:your-staging-jwt-secret}
  issuer: api-server-staging
  expiration_time: 2h
  refresh_time: 72h
  algorithm: HS256

# Rate limiting configuration
rate_limit:
  requests_per_second: 75.0
  burst_size: 150
  cleanup_interval: 7m

# CORS configuration
cors:
  allow_origins:
    - "https://staging.yourapp.com"
    - "http://localhost:3000"
  allow_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
  allow_headers:
    - Origin
    - Content-Length
    - Content-Type
    - Authorization
    - X-Request-ID
  expose_headers:
    - X-Request-ID
  allow_credentials: true
  max_age: 6h

# Logging configuration
logging:
  level: info
  format: json
  output: stdout
  disable_caller: false
  disable_stacktrace: false
  service_name: api-server
  service_version: v1.0.0

# Feature flags
features:
  enable_metrics: true
  enable_profiling: true
  enable_debug_endpoints: true
  enable_swagger: true

# Microservices configuration
services:
  auth_service:
    host: ${AUTH_SERVICE_HOST:localhost}
    port: ${AUTH_SERVICE_PORT:8081}
    timeout: 30s
  user_service:
    host: ${USER_SERVICE_HOST:localhost}
    port: ${USER_SERVICE_PORT:8082}
    timeout: 30s
  api_gateway:
    host: ${API_GATEWAY_HOST:localhost}
    port: ${API_GATEWAY_PORT:8080}
    timeout: 30s