events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        server api-gateway:8080;
    }
    
    upstream auth_service {
        server auth-service:8081;
    }
    
    upstream user_service {
        server user-service:8082;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Request-ID $request_id always;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Health check (nginx level)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Route all API traffic through API Gateway
        location /api/v1/ {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 16 4k;
        }

        # Direct routing for service health checks (bypass gateway)
        location /services/auth/health {
            proxy_pass http://auth_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /services/user/health {
            proxy_pass http://user_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Default route
        location / {
            return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }
    }
}