# Production environment configuration
environment: production
service_name: api-server
version: v1.0.0

# Server configuration
server:
  host: 0.0.0.0
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  shutdown_timeout: 30s
  tls_cert_file: /etc/ssl/certs/api-server.crt
  tls_key_file: /etc/ssl/private/api-server.key

# Database configuration
database:
  host: ${DB_HOST}
  port: ${DB_PORT:5432}
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
  database: ${DB_NAME}
  ssl_mode: require
  max_open_conns: 50
  max_idle_conns: 10
  conn_max_lifetime: 1h
  conn_max_idle_time: 30m

# JWT configuration
jwt:
  secret: ${JWT_SECRET}
  issuer: api-server-prod
  expiration_time: 1h
  refresh_time: 24h
  algorithm: HS256

# Rate limiting configuration
rate_limit:
  requests_per_second: 50.0
  burst_size: 100
  cleanup_interval: 10m

# CORS configuration
cors:
  allow_origins:
    - ${ALLOWED_ORIGINS}
  allow_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
  allow_headers:
    - Origin
    - Content-Length
    - Content-Type
    - Authorization
    - X-Request-ID
  expose_headers:
    - X-Request-ID
  allow_credentials: true
  max_age: 1h

# Logging configuration
logging:
  level: info
  format: json
  output: stdout
  disable_caller: false
  disable_stacktrace: false
  service_name: api-server
  service_version: v1.0.0

# Feature flags
features:
  enable_metrics: true
  enable_profiling: false
  enable_debug_endpoints: false
  enable_swagger: false

# Microservices configuration
services:
  auth_service:
    host: ${AUTH_SERVICE_HOST}
    port: ${AUTH_SERVICE_PORT:8081}
    timeout: 30s
  user_service:
    host: ${USER_SERVICE_HOST}
    port: ${USER_SERVICE_PORT:8082}
    timeout: 30s
  api_gateway:
    host: ${API_GATEWAY_HOST}
    port: ${API_GATEWAY_PORT:8080}
    timeout: 30s

# Health check configuration
health:
  port: 8090
  path: /health
  timeout: 10s

# Monitoring configuration
monitoring:
  metrics_port: 9090
  profiling_port: 6060
  jaeger_endpoint: ${JAEGER_ENDPOINT}

# Security configuration
security:
  allowed_hosts:
    - ${ALLOWED_HOSTS}
  trusted_proxies:
    - ${TRUSTED_PROXIES}